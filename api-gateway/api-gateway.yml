server:
  port: 8081
security-constraints:
  open-uri:
    - /actuator/**
    - /api/v1/*/api-doc
    - /api/v1/questions/**
    - /api/v1/profile/profiles
    - /webjars/swagger-ui/**
    - /swagger-ui**
    - /v3/api-docs/**
cors:
  allowedOrigins: "*"
  allowedMethods: "*"
  allowedHeaders: "*"
  allowedCredentials: true
  maxAge: "3600"
spring:
  cloud:
    gateway:
      httpclient:
        connect-timeout: 3000
        response-timeout: 70s
      forwarded:
        enabled: true
      x-forwarded:
        enabled: true
        forEnabled: true
        protoEnabled: true
        portEnabled: true
        prefixEnabled: true
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: false
      routes:
        - id: profilesPrincipal
          uri: http://localhost:8080
          predicates:
            - Path= /api/v1/linkedin, /api/v1/linkedin/**, /api/v1/profiles/active/me/*, /api/v1/profiles/me/accounts, /api/v1/profiles/me/linkedin, /api/v1/account, /api/v1/account/**, /api/v1/profiles/me, /api/v1/profiles/me/**, /api/v1/webhook/oneflow, /api/v1/oneflow/create, /api/v1/profiles/*, /api/v1/profiles, /api/v1/resumes, /api/v1/cover-letter, /api/v1/interview-review, /api/v1/interview-review-status, /api/v1/fetch-file-content, /api/v1/website-visit, /api/v1/add-gig-overview, /api/v1/job-matching/**, /api/v1/add-user-overview/**, /api/v1/user-matching, /api/v1/add-users-overview, /api/v1/matching-wages, /api/v1/save-interview-review, /api/v1/website-visit, /api/v1/webhook/linkedin-messages, /api/v1/consultant-visit, /api/v1/notes/search, /api/v1/get-suitable-users/**, /api/v1/gig-matching, /api/v1/get-suitable-gigs/**, /api/v1/user-matching-wages, /api/v1/get-recent-consultants, /api/v1/contact-us-message, /api/v1/bullet-points-cv, /api/v1/add-agency-user, /api/v1/get-agencies-names, /api/v1/knowledge-program/access/requests, /api/v1/knowledge-program/access/*/close, /api/v1/knowledge-program/request, /api/v1/add-agency-admin, /api/v1/agencies-by-name, /api/v1/consultant-visit/report, /api/v1/agency-profiles-upload, /api/v1/get-gig/me/**, /api/v1/get-gig-suggestions/**, /api/v1/trueoriginal/isCertified, /api/v1/trueoriginal/certificates, /api/v1/profiles/me/personalized-articles
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: postsPrincipal
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/posts, /api/v1/posts/**, /api/v1/posts-likes, /api/v1/posts-likes/**, /api/v1/posts-comments, /api/v1/posts-comments/**, /api/v1/posts/me, /api/v1/posts/comments/me, /api/v1/posts/likes/me, /api/v1/comments/likes/me, /api/v1/comment-likes, /api/v1/comment-likes/**
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: PublicSearch
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/profiles, /api/v1/profiles/search
            - Query=projection, public-search-profile
            - Query=isOpenForWork, true
        - id: AdminSearch
          uri: http://localhost:8081
          predicates:
            - Path=/api/v1/profiles
            - Query=projection, admin-search-profile
            - Query=isOpenForWork, true
          filters:
            - RewritePath=/api/v1/(?<path>.*), /api/v1/admin//$\{path}
        - id: profiles
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/profiles/*/*, /api/v1/description/**, /api/v1/profiles/api-doc, /api/v1/profile/profiles
        - id: multimedia
          uri: http://localhost:8097
          predicates:
            - Path=/api/v1/multimedia, /api/v1/multimedia-manager/**
        - id: openapi
          uri: http://localhost:8081
          predicates:
            - Path=/v3/api-docs/**
          filters:
            - RewritePath=/v3/api-docs/(?<path>.*), /api/v1//$\{path}/api-doc
        - id: adminSearch2
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/admin/**
          metadata:
            auth-roles:
              - iamai-admin
          filters:
            - RewritePath=/api/v1/admin/(?<path>.*), /api/v1//$\{path}
        - id: GroupsUsers
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/groups, /api/v1/groups/**, /api/v1/me/group/*/access, /api/v1/*/group/*/check-access, /api/v1/*/group/*/subscribe, /api/v1/*/group/*/unsubscribe, /api/v1/subscribe, /api/v1/unsubscribe, /api/v1/group/access/*/approve, /api/v1/group/access/*/decline, /api/v1/group/access/requests
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: GroupsPosts
          uri: http://localhost:8080
          predicates:
            - Path= /api/v1/link/preview, /api/v1/groups-posts-comments-reply-likes, /api/v1/groups-posts-comments-reply-likes/**, /api/v1/groups-user, /api/v1/groups-user/**,/api/v1/groups-posts, /api/v1/groups-posts/**, /api/v1/groups-posts-likes, /api/v1/groups-posts-likes/**, /api/v1/groups-posts-comments, /api/v1/groups-posts-comments/**
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: GroupsPostsCommentsReply
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/groups-posts-comments-likes, /api/v1/groups-posts-comments-likes/**, /api/v1/groups-posts-comments-reply, /api/v1/groups-posts-comments-reply/** 
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: UserGroupsPostsCommentsReply
          uri: http://localhost:8080
          predicates:
            - Path= /api/v1/group/users/*, /api/v1/me/request-consultant/*, /api/v1/me/post-gigs, /api/v1/group/posts/me, /api/v1/group/posts/comments/me, /api/v1/group/posts/likes/me, /api/v1/group/posts/comments/likes/me, /api/v1/group/posts/comments/reply/me
            - Method=GET,PUT,PATCH,DELETE,POST
          filters:
            - AddPrincipalToPathFilter
        - id: Subscription
          uri: http://localhost:8080
          predicates:
            - Path=  /api/v1/newsletter/subscribe/me, /api/v1/newsletter/unsubscribe/me, /api/v1/newsletter-subscription/**, /api/v1/newsletter-subscription
            - Method=GET,POST
          filters:
            - AddPrincipalToPathFilter
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: web
            authorization-grant-type: authorization_code
            redirect-uri: ${keycloak-client.server-url}/login/oauth2/code/keycloak
            scope: openid
        provider:
          keycloak:
            authorization-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
            user-name-attribute: name
            user-info-authentication-method: header
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak-client.server-url}/realms/${keycloak-client.realm}/protocol/openid-connect/certs
keycloak-client:
  server-url: https://auth.iamai.se/auth
  realm: iamai
management:
  endpoints:
    web:
      exposure:
        include: '*'
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    reactor.netty.http.client: DEBUG
springdoc:
  packagesToScan: com.agenatech
health:
  config:
    enabled: false